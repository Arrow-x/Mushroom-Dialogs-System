[gd_resource type="VisualShader" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
output_port_for_preview = 0
constant = Color( 0.207553, 0.199505, 0.457031, 1 )

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[sub_resource type="VisualShaderNodeColorOp" id=3]
operator = 4

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out5p0 = _tex_read.rgb;
		n_out5p1 = _tex_read.a;
	}

// Color:2
	vec3 n_out2p0 = vec3(0.207553, 0.199505, 0.457031);
	float n_out2p1 = 1.000000;

// ColorOp:7
	vec3 n_out7p0;
	{
		float base = n_out5p0.x;
		float blend = n_out2p0.x;
		if (base < 0.5) {
			n_out7p0.x = 2.0 * base * blend;
		} else {
			n_out7p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.y;
		float blend = n_out2p0.y;
		if (base < 0.5) {
			n_out7p0.y = 2.0 * base * blend;
		} else {
			n_out7p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.z;
		float blend = n_out2p0.z;
		if (base < 0.5) {
			n_out7p0.z = 2.0 * base * blend;
		} else {
			n_out7p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -76.75, 139 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 600, 80 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 60, 200 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( 60, 60 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( 360, 180 )
nodes/fragment/connections = PoolIntArray( 7, 0, 0, 0, 5, 0, 7, 0, 2, 0, 7, 1, 5, 1, 0, 1 )
